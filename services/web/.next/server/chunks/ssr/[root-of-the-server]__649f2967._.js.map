{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///D:/SideHustle/spot2go/services/web/src/lib/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Read the backend API URL from the environment variable, with a fallback for local development.\r\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000/api';\r\n\r\n// Create a pre-configured instance of axios.\r\n// All API requests will originate from this instance.\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\n/**\r\n * A critical function that adds the user's JWT to the headers of all subsequent API requests.\r\n * This is how the backend knows the user is authenticated.\r\n * @param {string | null} token The JWT received from the server after login.\r\n */\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    // If a token is provided, add it to the Authorization header.\r\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  } else {\r\n    // If no token is provided (e.g., on logout), remove the header.\r\n    delete api.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\n// --- Authentication Endpoints ---\r\nexport const registerUser = (userData) => api.post('/auth/register', userData);\r\nexport const loginUser = (credentials) => api.post('/auth/login', credentials);\r\n\r\n\r\n// --- Customer-Facing Endpoints ---\r\nexport const getPlaces = () => api.get('/customers/places');\r\nexport const getPlaceById = (id) => api.get(`/customers/places/${id}`); // Example for a future details page\r\nexport const createBooking = (bookingData) => api.post('/customers/bookings', bookingData);\r\nexport const getUserBookings = () => api.get('/customers/bookings');\r\n\r\n// --- Owner-Facing Endpoints (for future use) ---\r\nexport const getOwnerPlaces = () => api.get('/owners/places');\r\nexport const createPlace = (placeData) => api.post('/owners/places', placeData);\r\n\r\n\r\nexport default api;\r\n\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,iGAAiG;AACjG,MAAM,UAAU,6DAAmC;AAEnD,6CAA6C;AAC7C,sDAAsD;AACtD,MAAM,MAAM,qHAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAOO,MAAM,eAAe,CAAC;IAC3B,IAAI,OAAO;QACT,8DAA8D;QAC9D,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;IAClE,OAAO;QACL,gEAAgE;QAChE,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;IACrD;AACF;AAGO,MAAM,eAAe,CAAC,WAAa,IAAI,IAAI,CAAC,kBAAkB;AAC9D,MAAM,YAAY,CAAC,cAAgB,IAAI,IAAI,CAAC,eAAe;AAI3D,MAAM,YAAY,IAAM,IAAI,GAAG,CAAC;AAChC,MAAM,eAAe,CAAC,KAAO,IAAI,GAAG,CAAC,CAAC,kBAAkB,EAAE,IAAI,GAAG,oCAAoC;AACrG,MAAM,gBAAgB,CAAC,cAAgB,IAAI,IAAI,CAAC,uBAAuB;AACvE,MAAM,kBAAkB,IAAM,IAAI,GAAG,CAAC;AAGtC,MAAM,iBAAiB,IAAM,IAAI,GAAG,CAAC;AACrC,MAAM,cAAc,CAAC,YAAc,IAAI,IAAI,CAAC,kBAAkB;uCAGtD","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///D:/SideHustle/spot2go/services/web/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext, ReactNode } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { setAuthToken, registerUser, loginUser } from '../lib/api';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n/**\r\n * @typedef {Object} User\r\n * @property {number} exp\r\n * @property {any} [key]\r\n */\r\n\r\ninterface User {\r\n  exp: number;\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * @typedef {Object} AuthContextType\r\n * @property {User|null} user\r\n * @property {function} setUser\r\n * @property {boolean} isAuthenticated\r\n * @property {boolean} loading\r\n * @property {function(string, string): Promise<User>} login\r\n * @property {function(string, string, string): Promise<User>} register\r\n * @property {function(): void} logout\r\n */\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  setUser: React.Dispatch<React.SetStateAction<User | null>>;\r\n  isAuthenticated: boolean;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<User>;\r\n  register: (name: string, email: string, password: string) => Promise<User>;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  setUser: () => {},\r\n  isAuthenticated: false,\r\n  loading: false,\r\n  login: async () => {\r\n    throw new Error('login function not initialized');\r\n  },\r\n  register: async () => {\r\n    throw new Error('register function not initialized');\r\n  },\r\n  logout: () => {},\r\n});\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        if (decoded && typeof decoded.exp === 'number' && decoded.exp * 1000 > Date.now()) {\r\n          setUser(decoded as User);\r\n          setAuthToken(token);\r\n        } else {\r\n          // Token expired or exp is missing\r\n          localStorage.removeItem('token');\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Invalid token:\", error);\r\n        localStorage.removeItem('token');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string): Promise<User> => {\r\n      const response = await loginUser({ email, password });\r\n      const { token } = response.data;\r\n      localStorage.setItem('token', token);\r\n      const decoded: User = jwtDecode(token);\r\n      setUser(decoded);\r\n      setAuthToken(token);\r\n      router.push('/');\r\n      return decoded;\r\n    };\r\n    \r\n    const register = async (name: string, email: string, password: string): Promise<User> => {\r\n      const response = await registerUser({ name, email, password, role: 'customer' });\r\n      const { token } = response.data;\r\n      localStorage.setItem('token', token);\r\n      const decoded: User = jwtDecode(token);\r\n      setUser(decoded);\r\n      setAuthToken(token);\r\n      router.push('/');\r\n      return decoded;\r\n    };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setAuthToken(null);\r\n    router.push('/login');\r\n  };\r\n\r\n  const authContextValue = {\r\n    user,\r\n    setUser,\r\n    isAuthenticated: !!user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;AAkCA,MAAM,4BAAc,IAAA,oHAAa,EAAkB;IACjD,MAAM;IACN,SAAS,KAAO;IAChB,iBAAiB;IACjB,SAAS;IACT,OAAO;QACL,MAAM,IAAI,MAAM;IAClB;IACA,UAAU;QACR,MAAM,IAAI,MAAM;IAClB;IACA,QAAQ,KAAO;AACjB;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,IAAA,iHAAU,EAAC;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAMO,MAAM,eAA4C,CAAC,EAAE,QAAQ,EAAE;IACpE,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,+GAAQ,EAAc;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,+GAAQ,EAAC;IACvC,MAAM,SAAS,IAAA,oIAAS;IAExB,IAAA,gHAAS,EAAC;QACR,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO;YACT,IAAI;gBACF,MAAM,UAAU,IAAA,uIAAS,EAAC;gBAC1B,IAAI,WAAW,OAAO,QAAQ,GAAG,KAAK,YAAY,QAAQ,GAAG,GAAG,OAAO,KAAK,GAAG,IAAI;oBACjF,QAAQ;oBACR,IAAA,0HAAY,EAAC;gBACf,OAAO;oBACL,kCAAkC;oBAClC,aAAa,UAAU,CAAC;gBAC1B;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,kBAAkB;gBAChC,aAAa,UAAU,CAAC;YAC1B;QACF;QACA,WAAW;IACb,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAChC,MAAM,WAAW,MAAM,IAAA,uHAAS,EAAC;YAAE;YAAO;QAAS;QACnD,MAAM,EAAE,KAAK,EAAE,GAAG,SAAS,IAAI;QAC/B,aAAa,OAAO,CAAC,SAAS;QAC9B,MAAM,UAAgB,IAAA,uIAAS,EAAC;QAChC,QAAQ;QACR,IAAA,0HAAY,EAAC;QACb,OAAO,IAAI,CAAC;QACZ,OAAO;IACT;IAEA,MAAM,WAAW,OAAO,MAAc,OAAe;QACnD,MAAM,WAAW,MAAM,IAAA,0HAAY,EAAC;YAAE;YAAM;YAAO;YAAU,MAAM;QAAW;QAC9E,MAAM,EAAE,KAAK,EAAE,GAAG,SAAS,IAAI;QAC/B,aAAa,OAAO,CAAC,SAAS;QAC9B,MAAM,UAAgB,IAAA,uIAAS,EAAC;QAChC,QAAQ;QACR,IAAA,0HAAY,EAAC;QACb,OAAO,IAAI,CAAC;QACZ,OAAO;IACT;IAEF,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,QAAQ;QACR,IAAA,0HAAY,EAAC;QACb,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,mBAAmB;QACvB;QACA;QACA,iBAAiB,CAAC,CAAC;QACnB;QACA;QACA;QACA;IACF;IAEA,qBACE,qKAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///D:/SideHustle/spot2go/services/web/src/components/ui/sonner.tsx"],"sourcesContent":["\"use client\";\n\nimport { useTheme } from \"next-themes\";\nimport { Toaster as Sonner, ToasterProps } from \"sonner\";\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme();\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      style={\n        {\n          \"--normal-bg\": \"var(--popover)\",\n          \"--normal-text\": \"var(--popover-foreground)\",\n          \"--normal-border\": \"var(--border)\",\n        } as React.CSSProperties\n      }\n      {...props}\n    />\n  );\n};\n\nexport { Toaster };\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;;AAHA;;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,IAAA,iIAAQ;IAErC,qBACE,qKAAC,uHAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///D:/SideHustle/spot2go/services/web/src/pages/_app.jsx"],"sourcesContent":["import '../styles/globals.css';\r\nimport { AuthProvider } from '../context/AuthContext';\r\nimport { Toaster } from '../components/ui/sonner';\r\n\r\nexport default function App({ Component, pageProps }) {\r\n  return (\r\n    <AuthProvider>\r\n      <Component {...pageProps} />\r\n      <Toaster />\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;AACA;AACA;;;;;;;;;;AAEe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;IAClD,qBACE,qKAAC,uIAAY;;0BACX,qKAAC;gBAAW,GAAG,SAAS;;;;;;0BACxB,qKAAC,sIAAO;;;;;;;;;;;AAGd","debugId":null}}]
}