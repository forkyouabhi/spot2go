{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/SideHustle/spot2go/services/web/src/pages/index.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { getPlaces } from '@/lib/api';\r\nimport { HomeScreen } from '@/components/HomeScreen';\r\nimport { SplashScreen } from '@/components/SplashScreen';\r\n\r\nexport default function Home() {\r\n  const { isAuthenticated, loading, user } = useAuth();\r\n  const router = useRouter();\r\n  const [places, setPlaces] = useState([]);\r\n  const [dataLoading, setDataLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (loading) return; // Wait until auth check is complete\r\n\r\n    if (!isAuthenticated) {\r\n      setDataLoading(false);\r\n    } else {\r\n      const fetchPlaces = async () => {\r\n        try {\r\n          const response = await getPlaces();\r\n          setPlaces(response.data);\r\n        } catch (error) {\r\n          console.error(\"Failed to fetch places\", error);\r\n        } finally {\r\n          setDataLoading(false);\r\n        }\r\n      };\r\n      fetchPlaces();\r\n    }\r\n  }, [isAuthenticated, loading]);\r\n  \r\n  if (loading || dataLoading) {\r\n    return (\r\n        <div className=\"min-h-screen flex items-center justify-center bg-brand-cream\">\r\n            <div className=\"text-center space-y-4\">\r\n                <div className=\"w-16 h-16 rounded-2xl mx-auto animate-spin border-4 border-t-transparent border-brand-orange\"/>\r\n                <p className=\"font-semibold text-brand-burgundy\">Loading Your Spots...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n     return <SplashScreen onNavigate={(screen) => router.push(`/${screen}`)} />;\r\n  }\r\n  \r\n  return (\r\n    <HomeScreen\r\n      userName={user?.name || user?.email}\r\n      places={places}\r\n      onPlaceSelect={(place) => router.push(`/places/${place.id}`)}\r\n      onNavigate={(screen) => router.push(`/${screen}`)}\r\n    />\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMe,SAAS;IACtB,MAAM,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG;IAC3C,MAAM,SAAS,IAAA,oIAAS;IACxB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,+GAAQ,EAAC,EAAE;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,+GAAQ,EAAC;IAE/C,IAAA,gHAAS,EAAC;QACR,IAAI,SAAS,QAAQ,oCAAoC;QAEzD,IAAI,CAAC,iBAAiB;YACpB,eAAe;QACjB,OAAO;YACL,MAAM,cAAc;gBAClB,IAAI;oBACF,MAAM,WAAW,MAAM;oBACvB,UAAU,SAAS,IAAI;gBACzB,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,0BAA0B;gBAC1C,SAAU;oBACR,eAAe;gBACjB;YACF;YACA;QACF;IACF,GAAG;QAAC;QAAiB;KAAQ;IAE7B,IAAI,WAAW,aAAa;QAC1B,qBACI,qKAAC;YAAI,WAAU;sBACX,cAAA,qKAAC;gBAAI,WAAU;;kCACX,qKAAC;wBAAI,WAAU;;;;;;kCACf,qKAAC;wBAAE,WAAU;kCAAoC;;;;;;;;;;;;;;;;;IAI/D;IAEA,IAAI,CAAC,iBAAiB;QACnB,qBAAO,qKAAC;YAAa,YAAY,CAAC,SAAW,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ;;;;;;IACxE;IAEA,qBACE,qKAAC;QACC,UAAU,MAAM,QAAQ,MAAM;QAC9B,QAAQ;QACR,eAAe,CAAC,QAAU,OAAO,IAAI,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE;QAC3D,YAAY,CAAC,SAAW,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ;;;;;;AAGtD","debugId":null}}]
}